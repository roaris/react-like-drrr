{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","message","message_list","icon","alt","e","this","setState","target","value","preventDefault","new_message_list","slice","unshift","class","type","src","onClick","setGirl","setBakyura","setBear","setNumakuro","setSetton","onSubmit","doSubmit","onChange","doChange","map","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"8OA4FeA,E,kDAxFb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,QAAS,GACTC,aAAc,GACdC,KAAM,kBACNC,IAAK,QANU,E,4CAUnB,SAASC,GACPC,KAAKC,SAAS,CAACN,QAASI,EAAEG,OAAOC,U,sBAGnC,SAASJ,GACPA,EAAEK,iBACF,IAAIC,EAAmBL,KAAKN,MAAME,aAAaU,QAC/CD,EAAiBE,QAAQ,CAACV,KAAMG,KAAKN,MAAMG,KAAMC,IAAKE,KAAKN,MAAMI,IAAKH,QAASK,KAAKN,MAAMC,UAC1FK,KAAKC,SAAS,CAACL,aAAcS,IAC7BL,KAAKC,SAAS,CAACN,QAAS,O,qBAG1B,WACEK,KAAKC,SAAS,CAACJ,KAAM,kBAAmBC,IAAK,W,wBAG/C,WACEE,KAAKC,SAAS,CAACJ,KAAM,qBAAsBC,IAAK,c,qBAGlD,WACEE,KAAKC,SAAS,CAACJ,KAAM,kBAAmBC,IAAK,W,yBAG/C,WACEE,KAAKC,SAAS,CAACJ,KAAM,sBAAuBC,IAAK,e,uBAGnD,WACEE,KAAKC,SAAS,CAACJ,KAAM,oBAAqBC,IAAK,a,oBAGjD,WAAU,IAAD,OACP,OACE,sBAAKU,MAAM,aAAX,UACE,sBAAKA,MAAM,aAAX,UACE,qEACA,uBAAOC,KAAK,QAAQC,IAAI,kBAAkBZ,IAAI,OAAOa,QAAS,WAAK,EAAKC,aACxE,uBAAOH,KAAK,QAAQC,IAAI,qBAAqBZ,IAAI,UAAUa,QAAS,WAAK,EAAKE,gBAC9E,uBAAOJ,KAAK,QAAQC,IAAI,kBAAkBZ,IAAI,OAAOa,QAAS,WAAK,EAAKG,aACxE,uBAAOL,KAAK,QAAQC,IAAI,sBAAsBZ,IAAI,WAAWa,QAAS,WAAK,EAAKI,iBAChF,uBAAON,KAAK,QAAQC,IAAI,oBAAoBZ,IAAI,SAASa,QAAS,WAAK,EAAKK,kBAG9E,uBAEA,sBAAKR,MAAM,cAAX,UACE,qBAAKE,IAAKV,KAAKN,MAAMG,KAAMC,IAAKE,KAAKN,MAAMI,MAC3C,uBAAMmB,SAAU,SAAClB,GAAD,OAAK,EAAKmB,SAASnB,IAAnC,UACE,0BAAUoB,SAAU,SAACpB,GAAD,OAAK,EAAKqB,SAASrB,IAAII,MAAOH,KAAKN,MAAMC,UAC7D,uBAAOc,KAAK,SAASN,MAAM,gBAI/B,uBAEA,qBAAKK,MAAM,WAAX,SACE,8BACGR,KAAKN,MAAME,aAAayB,KAAI,SAAClB,GAAD,OAC3B,sBAAKK,MAAM,aAAX,UACE,qBAAKE,IAAKP,EAAMN,KAAMC,IAAKK,EAAML,MACjC,qBAAKU,MACS,SAAZL,EAAML,IAAa,iBACL,YAAZK,EAAML,IAAgB,oBACV,SAAZK,EAAML,IAAa,iBACP,aAAZK,EAAML,IAAiB,qBACxB,mBALH,SAME,4BAAIK,EAAMR,6B,GA9EV2B,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.64cb198c.chunk.js","sourcesContent":["import React, {Component} from 'react'\nimport './App.css'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      message: '',\n      message_list: [],\n      icon: './icon_girl.png',\n      alt: 'girl'\n    }\n  }\n\n  doChange(e) {\n    this.setState({message: e.target.value})\n  }\n\n  doSubmit(e) {\n    e.preventDefault()\n    let new_message_list = this.state.message_list.slice()\n    new_message_list.unshift({icon: this.state.icon, alt: this.state.alt, message: this.state.message})\n    this.setState({message_list: new_message_list})\n    this.setState({message: ''})\n  }\n\n  setGirl() {\n    this.setState({icon: './icon_girl.png', alt: 'girl'})\n  }\n\n  setBakyura() {\n    this.setState({icon: './icon_bakyura.png', alt: 'bakyura'})\n  }\n\n  setBear() {\n    this.setState({icon: './icon_bear.png', alt: 'bear'})\n  }\n\n  setNumakuro() {\n    this.setState({icon: './icon_numakuro.png', alt: 'numakuro'})\n  }\n\n  setSetton() {\n    this.setState({icon: './icon_setton.png', alt: 'setton'})\n  }\n\n  render() {\n    return (\n      <div class='topWrapper'>\n        <div class='iconChange'>\n          <p>アイコン変更</p>\n          <input type='image' src='./icon_girl.png' alt='girl' onClick={()=>{this.setGirl()}} />\n          <input type='image' src='./icon_bakyura.png' alt='bakyura' onClick={()=>{this.setBakyura()}} />\n          <input type='image' src='./icon_bear.png' alt='bear' onClick={()=>{this.setBear()}} />\n          <input type='image' src='./icon_numakuro.png' alt='numakuro' onClick={()=>{this.setNumakuro()}} />\n          <input type='image' src='./icon_setton.png' alt='setton' onClick={()=>{this.setSetton()}} />\n        </div>\n\n        <hr />\n\n        <div class='messageForm'>\n          <img src={this.state.icon} alt={this.state.alt} />\n          <form onSubmit={(e)=>this.doSubmit(e)}>\n            <textarea onChange={(e)=>this.doChange(e)} value={this.state.message} />\n            <input type='submit' value='POST!' />\n          </form>\n        </div>\n\n        <hr />\n\n        <div class='chatForm'>\n          <div>\n            {this.state.message_list.map((value)=>(\n              <div class='messageBox'>\n                <img src={value.icon} alt={value.alt} />\n                <div class={\n                  value.alt==='girl'?'messageBoxGirl'\n                  :(value.alt==='bakyura'?'messageBoxBakyura'\n                  :(value.alt==='bear'?'messageBoxBear'\n                  :(value.alt==='numakuro'?'messageBoxNumakuro'\n                  :'messageBoxSetton')))}>\n                  <p>{value.message}</p>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}